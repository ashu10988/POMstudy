<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="648" started-at="2019-08-16T11:52:42Z" finished-at="2019-08-16T11:52:42Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="648" started-at="2019-08-16T11:52:42Z" finished-at="2019-08-16T11:52:42Z">
      <class name="framework.projectname.testscripts.Test1">
        <test-method status="PASS" signature="beforesuit()[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="beforesuit" is-config="true" duration-ms="358" started-at="2019-08-16T17:22:41Z" finished-at="2019-08-16T17:22:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuit -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="beforeclass" is-config="true" duration-ms="4" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="beforeMethod" is-config="true" duration-ms="10" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void framework.projectname.testscripts.Test1.hello()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="hello()[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="hello" duration-ms="81" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hello -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="AfterMethod" is-config="true" duration-ms="419" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hello status=SUCCESS method=Test1.hello()[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void framework.projectname.testscripts.Test1.hello1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="hello1()[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="hello1" duration-ms="11" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at framework.projectname.helper.assertion.AssertionHelper.makeFalse(AssertionHelper.java:35)
	at framework.projectname.testscripts.Test1.hello1(Test1.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hello1 -->
        <test-method status="PASS" signature="AfterMethod(org.testng.ITestResult)[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d]" name="AfterMethod" is-config="true" duration-ms="100" started-at="2019-08-16T17:22:42Z" finished-at="2019-08-16T17:22:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=hello1 status=FAILURE method=Test1.hello1()[pri:0, instance:framework.projectname.testscripts.Test1@2b98378d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- framework.projectname.testscripts.Test1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
